@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<Umbraco.Cms.Core.Models.Blocks.BlockGridItem>;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@using Umbraco.Cms.Core.PropertyEditors.ValueConverters.ColorPickerValueConverter
@{
    var sectionTitle = Model?.Content.Value<string>("sectionTitle") ?? "";
    var sectionId = sectionTitle?.ToString().ToLower().Trim().Replace(" ", "-");  

    var spacingTopClass = (Model!.Content.Value<book>("addSpaceToTop")) ? "spacing-top": "";
    var spacingBottomClass = (Model!.Content.Value<book>("addSpaceToBottom")) ? "spacing-bottom": "";
    var centerContentClass = (Model!.Content.Value<book>("centerContentClass")) ? "center": "";    

    var sectionBackgroundColorLabel = Model?.Content?.Value<PickedColor>("sectionBackgroundColor")?.Label.ToLower() ?? null;
    var backgroundColorClass = (!string.IsNullOrEmpty(sectionBackgroundColorLabel) && sectionBackgroundColorLabel != "none")  ? $"bg-{backgroundColorLabel}" : "";    

    var sectionBackgroundImage = Model?.Content.Value<IPublishedContent>("sectionBackgroundImage")?.Url() ?? null;
}


<section id="@sectionId" class="@spacingTopClass @spacingBottomClass">

    @if (!string.IsNullOrEmpty(backgroundColorClass))
    {
         <div class="background  @bgColorClass"></div>
    }

    <div class="container @centerContentClass">
     @if (!string.IsNullOrEmpty(sectionBackgroundImage))
    {
         <div class="background-image" src="@sectionBackgroundImage" allt="@sectionTitle background image"></div>
    }

         @await Html.GetBlockGridItemAreasHtmlAsync(Model)
    </div>  
</section>




